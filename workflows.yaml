```yml
# .github/workflows/poc.yml
name: Continuous Integration and Deployment (CI/CD)
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Set up Python 3.9
        uses: actions/setup-python@v4.1.1
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Build and deploy application
        run: |
          docker build -t poc .
          docker tag poc $GITHUB_ACTOR/poc:$GITHUB_SHA
          docker tag poc $GITHUB_ACTOR/poc:latest
          docker push $GITHUB_ACTOR/poc:$GITHUB_SHA
          docker push $GITHUB_ACTOR/poc:latest
      - name: Test
        uses: actions/setup-python@v4.1.1
        with:
          python-version: '3.9'
        steps:
          - run: |
              python -c 'import unittest
                          import sys
                          sys.path.append(".")
                          import main
                          suite = unittest.TestLoader().loadTestsFromTestCase(main.FunctionTest)
                          runner = unittest.TextTestRunner(verbosity=2)
                          runner.run(suite)'
        environment:
          PYTHONUNBUFFERED: '1'

# .github/workflows/docker-image.yml
name: Build Docker Image
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build Docker image
        run: |
          docker build -t poc .
      - name: Push Docker image
        uses: docker/push-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}
          repository: $GITHUB_ACTOR/poc

# .github/workflows/unit-test.yml
name: Unit Tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Setup Python 3.9
        uses: actions/setup-python@v4.1.1
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Run Unit Tests
        run: |
          python -c 'import unittest
                       import sys
                       sys.path.append(".")
                       import helpers
                       suite = unittest.TestLoader().loadTestsFromTestCase(helpers.FunctionTest)
                       runner = unittest.TextTestRunner(verbosity=2)
                       runner.run(suite)'

# .github/workflows/integration-test.yml
name: Integration Tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Setup Python 3.9
        uses: actions/setup-python@v4.1.1
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Run Integration Tests
        run: |
          # Run integration tests here, for example, using a library like Pytest
          # or Unittest, or even a library like Behave for BDD tests
          # For now, just a placeholder
          python -c 'import unittest
                      import sys
                      sys.path.append(".")
                      import main
                      suite = unittest.TestLoader().loadTestsFromTestCase(main.FunctionTest)
                      runner = unittest.TextTestRunner(verbosity=2)
                      runner.run(suite)'

# .github/workflows/security-scan.yml
name: Security Scan
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Security scan with Snyk
        uses: snyk/actions/scan@v0.7.0
        with:
          file: .snyk
          auth: false

# .github/workflows/deploy.yml
name: Deploy to production
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Deploy to production
        uses: appleboy/deploy-github-action@v1.0.4
        with:
          tokens: ${{ secrets.TOKENS }}
          url: https://example.com
```

The updated set of YAML files for the repository can be placed in the `.github/workflows` directory, with the addition of new workflows `integration-test.yml` and `security-scan.yml` and also new deploy workflow `deploy.yml`.

Here is the final complete content as the final answer.